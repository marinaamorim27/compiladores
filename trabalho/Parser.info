-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from Parser.y
-----------------------------------------------------------------------------

state 86 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Funcs                             (0)
	Funcs -> Func                                      (1)
	Funcs -> Func Funcs                                (2)
	Func -> Types id '(' Args ')' Stmt                 (3)
	Args ->                                            (4)
	Args -> Types id                                   (5)
	Args -> Types id ',' Args                          (6)
	Block -> Stmt                                      (7)
	Block -> Block Stmt                                (8)
	Stmt -> Simple ';'                                 (9)
	Stmt -> Exp ';'                                    (10)
	Stmt -> '{' Block '}'                              (11)
	Stmt -> if '(' Exp ')' Stmt else Stmt              (12)
	Stmt -> if '(' Exp ')' Stmt                        (13)
	Stmt -> while '(' Exp ')' Stmt                     (14)
	Stmt -> return Exp ';'                             (15)
	Stmt -> print_int '(' Exp ')' ';'                  (16)
	Stmt -> scan_int '(' Exp ')' ';'                   (17)
	Simple -> id '=' Exp                               (18)
	Simple -> Types id                                 (19)
	Types -> int                                       (20)
	Types -> bool                                      (21)
	Exp -> num                                         (22)
	Exp -> true                                        (23)
	Exp -> false                                       (24)
	Exp -> Exp '+' Exp                                 (25)
	Exp -> Exp '-' Exp                                 (26)
	Exp -> Exp '*' Exp                                 (27)
	Exp -> Exp '/' Exp                                 (28)
	Exp -> Exp '%' Exp                                 (29)
	Exp -> Exp "==" Exp                                (30)
	Exp -> Exp "!=" Exp                                (31)
	Exp -> Exp '<' Exp                                 (32)
	Exp -> Exp "<=" Exp                                (33)
	Exp -> Exp '>' Exp                                 (34)
	Exp -> Exp ">=" Exp                                (35)
	Exp -> '(' Exp ')'                                 (36)
	Exp -> '!' Exp                                     (37)
	Exp -> Exp "&&" Exp                                (38)
	Exp -> Exp "||" Exp                                (39)
	Exp -> id                                          (40)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	';'            { TokenSEMICOLON }
	','            { TokenCOMMA }
	'+'            { TokenADD }
	'-'            { TokenSUB }
	'*'            { TokenMULT }
	'/'            { TokenDIV }
	'%'            { TokenMOD }
	"=="           { TokenEQUAL }
	"!="           { TokenNEQUAL }
	'<'            { TokenLESS }
	"<="           { TokenLESSEQ }
	'>'            { TokenGREATER }
	">="           { TokenGREATEREQ }
	'('            { TokenLPAREN }
	')'            { TokenRPAREN }
	'{'            { TokenLBRACE }
	'}'            { TokenRBRACE }
	'='            { TokenASSIGN }
	'!'            { TokenNot }
	"&&"           { TokenAND }
	"||"           { TokenOR }
	if             { TokenIF }
	else           { TokenELSE }
	while          { TokenWHILE }
	return         { TokenRETURN }
	int            { TokenInt }
	num            { TokenNum $$ }
	bool           { TokenBool $$ }
	true           { TokenTrue }
	false          { TokenFalse }
	print_int      { TokenPrint }
	scan_int       { TokenScan }
	id             { TokenIdent $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Funcs           rules 1, 2
	Func            rule  3
	Args            rules 4, 5, 6
	Block           rules 7, 8
	Stmt            rules 9, 10, 11, 12, 13, 14, 15, 16, 17
	Simple          rules 18, 19
	Types           rules 20, 21
	Exp             rules 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	int            shift, and enter state 4
	bool           shift, and enter state 5

	Funcs          goto state 6
	Func           goto state 7
	Types          goto state 3

State 1


	int            shift, and enter state 4
	bool           shift, and enter state 5

	Func           goto state 2
	Types          goto state 3

State 2

	Funcs -> Func .                                     (rule 1)



State 3

	Func -> Types . id '(' Args ')' Stmt                (rule 3)

	id             shift, and enter state 9


State 4

	Types -> int .                                      (rule 20)

	id             reduce using rule 20


State 5

	Types -> bool .                                     (rule 21)

	id             reduce using rule 21


State 6

	%start_parser -> Funcs .                            (rule 0)

	%eof           accept


State 7

	Funcs -> Func .                                     (rule 1)
	Funcs -> Func . Funcs                               (rule 2)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	%eof           reduce using rule 1

	Funcs          goto state 8
	Func           goto state 7
	Types          goto state 3

State 8

	Funcs -> Func Funcs .                               (rule 2)

	%eof           reduce using rule 2


State 9

	Func -> Types id . '(' Args ')' Stmt                (rule 3)

	'('            shift, and enter state 10


State 10

	Func -> Types id '(' . Args ')' Stmt                (rule 3)

	')'            reduce using rule 4
	int            shift, and enter state 4
	bool           shift, and enter state 5

	Args           goto state 11
	Types          goto state 12

State 11

	Func -> Types id '(' Args . ')' Stmt                (rule 3)

	')'            shift, and enter state 14


State 12

	Args -> Types . id                                  (rule 5)
	Args -> Types . id ',' Args                         (rule 6)

	id             shift, and enter state 13


State 13

	Args -> Types id .                                  (rule 5)
	Args -> Types id . ',' Args                         (rule 6)

	','            shift, and enter state 31
	')'            reduce using rule 5


State 14

	Func -> Types id '(' Args ')' . Stmt                (rule 3)

	'('            shift, and enter state 19
	'{'            shift, and enter state 20
	'!'            shift, and enter state 21
	if             shift, and enter state 22
	while          shift, and enter state 23
	return         shift, and enter state 24
	int            shift, and enter state 4
	num            shift, and enter state 25
	bool           shift, and enter state 5
	true           shift, and enter state 26
	false          shift, and enter state 27
	print_int      shift, and enter state 28
	scan_int       shift, and enter state 29
	id             shift, and enter state 30

	Stmt           goto state 15
	Simple         goto state 16
	Types          goto state 17
	Exp            goto state 18

State 15

	Func -> Types id '(' Args ')' Stmt .                (rule 3)

	int            reduce using rule 3
	bool           reduce using rule 3
	%eof           reduce using rule 3


State 16

	Stmt -> Simple . ';'                                (rule 9)

	';'            shift, and enter state 59


State 17

	Simple -> Types . id                                (rule 19)

	id             shift, and enter state 58


State 18

	Stmt -> Exp . ';'                                   (rule 10)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            shift, and enter state 44
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 19

	Exp -> '(' . Exp ')'                                (rule 36)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 43

State 20

	Stmt -> '{' . Block '}'                             (rule 11)

	'('            shift, and enter state 19
	'{'            shift, and enter state 20
	'!'            shift, and enter state 21
	if             shift, and enter state 22
	while          shift, and enter state 23
	return         shift, and enter state 24
	int            shift, and enter state 4
	num            shift, and enter state 25
	bool           shift, and enter state 5
	true           shift, and enter state 26
	false          shift, and enter state 27
	print_int      shift, and enter state 28
	scan_int       shift, and enter state 29
	id             shift, and enter state 30

	Block          goto state 41
	Stmt           goto state 42
	Simple         goto state 16
	Types          goto state 17
	Exp            goto state 18

State 21

	Exp -> '!' . Exp                                    (rule 37)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 40

State 22

	Stmt -> if . '(' Exp ')' Stmt else Stmt             (rule 12)
	Stmt -> if . '(' Exp ')' Stmt                       (rule 13)

	'('            shift, and enter state 39


State 23

	Stmt -> while . '(' Exp ')' Stmt                    (rule 14)

	'('            shift, and enter state 38


State 24

	Stmt -> return . Exp ';'                            (rule 15)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 36

State 25

	Exp -> num .                                        (rule 22)

	';'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	'<'            reduce using rule 22
	"<="           reduce using rule 22
	'>'            reduce using rule 22
	">="           reduce using rule 22
	')'            reduce using rule 22
	"&&"           reduce using rule 22
	"||"           reduce using rule 22


State 26

	Exp -> true .                                       (rule 23)

	';'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'%'            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	'<'            reduce using rule 23
	"<="           reduce using rule 23
	'>'            reduce using rule 23
	">="           reduce using rule 23
	')'            reduce using rule 23
	"&&"           reduce using rule 23
	"||"           reduce using rule 23


State 27

	Exp -> false .                                      (rule 24)

	';'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'%'            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	'<'            reduce using rule 24
	"<="           reduce using rule 24
	'>'            reduce using rule 24
	">="           reduce using rule 24
	')'            reduce using rule 24
	"&&"           reduce using rule 24
	"||"           reduce using rule 24


State 28

	Stmt -> print_int . '(' Exp ')' ';'                 (rule 16)

	'('            shift, and enter state 35


State 29

	Stmt -> scan_int . '(' Exp ')' ';'                  (rule 17)

	'('            shift, and enter state 34


State 30

	Simple -> id . '=' Exp                              (rule 18)
	Exp -> id .                                         (rule 40)

	';'            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'%'            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	'<'            reduce using rule 40
	"<="           reduce using rule 40
	'>'            reduce using rule 40
	">="           reduce using rule 40
	'='            shift, and enter state 33
	"&&"           reduce using rule 40
	"||"           reduce using rule 40


State 31

	Args -> Types id ',' . Args                         (rule 6)

	')'            reduce using rule 4
	int            shift, and enter state 4
	bool           shift, and enter state 5

	Args           goto state 32
	Types          goto state 12

State 32

	Args -> Types id ',' Args .                         (rule 6)

	')'            reduce using rule 6


State 33

	Simple -> id '=' . Exp                              (rule 18)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 81

State 34

	Stmt -> scan_int '(' . Exp ')' ';'                  (rule 17)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 80

State 35

	Stmt -> print_int '(' . Exp ')' ';'                 (rule 16)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 79

State 36

	Stmt -> return Exp . ';'                            (rule 15)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            shift, and enter state 78
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 37

	Exp -> id .                                         (rule 40)

	';'            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'%'            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	'<'            reduce using rule 40
	"<="           reduce using rule 40
	'>'            reduce using rule 40
	">="           reduce using rule 40
	')'            reduce using rule 40
	"&&"           reduce using rule 40
	"||"           reduce using rule 40


State 38

	Stmt -> while '(' . Exp ')' Stmt                    (rule 14)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 77

State 39

	Stmt -> if '(' . Exp ')' Stmt else Stmt             (rule 12)
	Stmt -> if '(' . Exp ')' Stmt                       (rule 13)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 76

State 40

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> '!' Exp .                                    (rule 37)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'%'            reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	'<'            reduce using rule 37
	"<="           reduce using rule 37
	'>'            reduce using rule 37
	">="           reduce using rule 37
	')'            reduce using rule 37
	"&&"           reduce using rule 37
	"||"           reduce using rule 37


State 41

	Block -> Block . Stmt                               (rule 8)
	Stmt -> '{' Block . '}'                             (rule 11)

	'('            shift, and enter state 19
	'{'            shift, and enter state 20
	'}'            shift, and enter state 75
	'!'            shift, and enter state 21
	if             shift, and enter state 22
	while          shift, and enter state 23
	return         shift, and enter state 24
	int            shift, and enter state 4
	num            shift, and enter state 25
	bool           shift, and enter state 5
	true           shift, and enter state 26
	false          shift, and enter state 27
	print_int      shift, and enter state 28
	scan_int       shift, and enter state 29
	id             shift, and enter state 30

	Stmt           goto state 74
	Simple         goto state 16
	Types          goto state 17
	Exp            goto state 18

State 42

	Block -> Stmt .                                     (rule 7)

	'('            reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	'!'            reduce using rule 7
	if             reduce using rule 7
	while          reduce using rule 7
	return         reduce using rule 7
	int            reduce using rule 7
	num            reduce using rule 7
	bool           reduce using rule 7
	true           reduce using rule 7
	false          reduce using rule 7
	print_int      reduce using rule 7
	scan_int       reduce using rule 7
	id             reduce using rule 7


State 43

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> '(' Exp . ')'                                (rule 36)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            shift, and enter state 73
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 44

	Stmt -> Exp ';' .                                   (rule 10)

	'('            reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	'!'            reduce using rule 10
	if             reduce using rule 10
	else           reduce using rule 10
	while          reduce using rule 10
	return         reduce using rule 10
	int            reduce using rule 10
	num            reduce using rule 10
	bool           reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	print_int      reduce using rule 10
	scan_int       reduce using rule 10
	id             reduce using rule 10
	%eof           reduce using rule 10


State 45

	Exp -> Exp '+' . Exp                                (rule 25)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 72

State 46

	Exp -> Exp '-' . Exp                                (rule 26)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 71

State 47

	Exp -> Exp '*' . Exp                                (rule 27)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 70

State 48

	Exp -> Exp '/' . Exp                                (rule 28)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 69

State 49

	Exp -> Exp '%' . Exp                                (rule 29)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 68

State 50

	Exp -> Exp "==" . Exp                               (rule 30)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 67

State 51

	Exp -> Exp "!=" . Exp                               (rule 31)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 66

State 52

	Exp -> Exp '<' . Exp                                (rule 32)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 65

State 53

	Exp -> Exp "<=" . Exp                               (rule 33)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 64

State 54

	Exp -> Exp '>' . Exp                                (rule 34)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 63

State 55

	Exp -> Exp ">=" . Exp                               (rule 35)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 62

State 56

	Exp -> Exp "&&" . Exp                               (rule 38)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 61

State 57

	Exp -> Exp "||" . Exp                               (rule 39)

	'('            shift, and enter state 19
	'!'            shift, and enter state 21
	num            shift, and enter state 25
	true           shift, and enter state 26
	false          shift, and enter state 27
	id             shift, and enter state 37

	Exp            goto state 60

State 58

	Simple -> Types id .                                (rule 19)

	';'            reduce using rule 19


State 59

	Stmt -> Simple ';' .                                (rule 9)

	'('            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	'!'            reduce using rule 9
	if             reduce using rule 9
	else           reduce using rule 9
	while          reduce using rule 9
	return         reduce using rule 9
	int            reduce using rule 9
	num            reduce using rule 9
	bool           reduce using rule 9
	true           reduce using rule 9
	false          reduce using rule 9
	print_int      reduce using rule 9
	scan_int       reduce using rule 9
	id             reduce using rule 9
	%eof           reduce using rule 9


State 60

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)
	Exp -> Exp "||" Exp .                               (rule 39)

	';'            reduce using rule 39
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            reduce using rule 39
	"&&"           shift, and enter state 56
	"||"           reduce using rule 39


State 61

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp "&&" Exp .                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 38
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            reduce using rule 38
	"&&"           reduce using rule 38
	"||"           reduce using rule 38


State 62

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp ">=" Exp .                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 35
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	'<'            reduce using rule 35
	"<="           reduce using rule 35
	'>'            reduce using rule 35
	">="           reduce using rule 35
	')'            reduce using rule 35
	"&&"           reduce using rule 35
	"||"           reduce using rule 35


State 63

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp '>' Exp .                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 34
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 34
	"!="           reduce using rule 34
	'<'            reduce using rule 34
	"<="           reduce using rule 34
	'>'            reduce using rule 34
	">="           reduce using rule 34
	')'            reduce using rule 34
	"&&"           reduce using rule 34
	"||"           reduce using rule 34


State 64

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp "<=" Exp .                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 33
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 33
	"!="           reduce using rule 33
	'<'            reduce using rule 33
	"<="           reduce using rule 33
	'>'            reduce using rule 33
	">="           reduce using rule 33
	')'            reduce using rule 33
	"&&"           reduce using rule 33
	"||"           reduce using rule 33


State 65

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp '<' Exp .                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 32
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	'<'            reduce using rule 32
	"<="           reduce using rule 32
	'>'            reduce using rule 32
	">="           reduce using rule 32
	')'            reduce using rule 32
	"&&"           reduce using rule 32
	"||"           reduce using rule 32


State 66

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp "!=" Exp .                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 31
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 31
	"!="           reduce using rule 31
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            reduce using rule 31
	"&&"           reduce using rule 31
	"||"           reduce using rule 31


State 67

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp "==" Exp .                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 30
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 30
	"!="           reduce using rule 30
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            reduce using rule 30
	"&&"           reduce using rule 30
	"||"           reduce using rule 30


State 68

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp '%' Exp .                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	"=="           reduce using rule 29
	"!="           reduce using rule 29
	'<'            reduce using rule 29
	"<="           reduce using rule 29
	'>'            reduce using rule 29
	">="           reduce using rule 29
	')'            reduce using rule 29
	"&&"           reduce using rule 29
	"||"           reduce using rule 29


State 69

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp '/' Exp .                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	"=="           reduce using rule 28
	"!="           reduce using rule 28
	'<'            reduce using rule 28
	"<="           reduce using rule 28
	'>'            reduce using rule 28
	">="           reduce using rule 28
	')'            reduce using rule 28
	"&&"           reduce using rule 28
	"||"           reduce using rule 28


State 70

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp '*' Exp .                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	"=="           reduce using rule 27
	"!="           reduce using rule 27
	'<'            reduce using rule 27
	"<="           reduce using rule 27
	'>'            reduce using rule 27
	">="           reduce using rule 27
	')'            reduce using rule 27
	"&&"           reduce using rule 27
	"||"           reduce using rule 27


State 71

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp '-' Exp .                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 26
	"!="           reduce using rule 26
	'<'            reduce using rule 26
	"<="           reduce using rule 26
	'>'            reduce using rule 26
	">="           reduce using rule 26
	')'            reduce using rule 26
	"&&"           reduce using rule 26
	"||"           reduce using rule 26


State 72

	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp '+' Exp .                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           reduce using rule 25
	"!="           reduce using rule 25
	'<'            reduce using rule 25
	"<="           reduce using rule 25
	'>'            reduce using rule 25
	">="           reduce using rule 25
	')'            reduce using rule 25
	"&&"           reduce using rule 25
	"||"           reduce using rule 25


State 73

	Exp -> '(' Exp ')' .                                (rule 36)

	';'            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'%'            reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	'<'            reduce using rule 36
	"<="           reduce using rule 36
	'>'            reduce using rule 36
	">="           reduce using rule 36
	')'            reduce using rule 36
	"&&"           reduce using rule 36
	"||"           reduce using rule 36


State 74

	Block -> Block Stmt .                               (rule 8)

	'('            reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	'!'            reduce using rule 8
	if             reduce using rule 8
	while          reduce using rule 8
	return         reduce using rule 8
	int            reduce using rule 8
	num            reduce using rule 8
	bool           reduce using rule 8
	true           reduce using rule 8
	false          reduce using rule 8
	print_int      reduce using rule 8
	scan_int       reduce using rule 8
	id             reduce using rule 8


State 75

	Stmt -> '{' Block '}' .                             (rule 11)

	'('            reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	'!'            reduce using rule 11
	if             reduce using rule 11
	else           reduce using rule 11
	while          reduce using rule 11
	return         reduce using rule 11
	int            reduce using rule 11
	num            reduce using rule 11
	bool           reduce using rule 11
	true           reduce using rule 11
	false          reduce using rule 11
	print_int      reduce using rule 11
	scan_int       reduce using rule 11
	id             reduce using rule 11
	%eof           reduce using rule 11


State 76

	Stmt -> if '(' Exp . ')' Stmt else Stmt             (rule 12)
	Stmt -> if '(' Exp . ')' Stmt                       (rule 13)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            shift, and enter state 85
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 77

	Stmt -> while '(' Exp . ')' Stmt                    (rule 14)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            shift, and enter state 84
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 78

	Stmt -> return Exp ';' .                            (rule 15)

	'('            reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	'!'            reduce using rule 15
	if             reduce using rule 15
	else           reduce using rule 15
	while          reduce using rule 15
	return         reduce using rule 15
	int            reduce using rule 15
	num            reduce using rule 15
	bool           reduce using rule 15
	true           reduce using rule 15
	false          reduce using rule 15
	print_int      reduce using rule 15
	scan_int       reduce using rule 15
	id             reduce using rule 15
	%eof           reduce using rule 15


State 79

	Stmt -> print_int '(' Exp . ')' ';'                 (rule 16)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            shift, and enter state 83
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 80

	Stmt -> scan_int '(' Exp . ')' ';'                  (rule 17)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	')'            shift, and enter state 82
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 81

	Simple -> id '=' Exp .                              (rule 18)
	Exp -> Exp . '+' Exp                                (rule 25)
	Exp -> Exp . '-' Exp                                (rule 26)
	Exp -> Exp . '*' Exp                                (rule 27)
	Exp -> Exp . '/' Exp                                (rule 28)
	Exp -> Exp . '%' Exp                                (rule 29)
	Exp -> Exp . "==" Exp                               (rule 30)
	Exp -> Exp . "!=" Exp                               (rule 31)
	Exp -> Exp . '<' Exp                                (rule 32)
	Exp -> Exp . "<=" Exp                               (rule 33)
	Exp -> Exp . '>' Exp                                (rule 34)
	Exp -> Exp . ">=" Exp                               (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 38)
	Exp -> Exp . "||" Exp                               (rule 39)

	';'            reduce using rule 18
	'+'            shift, and enter state 45
	'-'            shift, and enter state 46
	'*'            shift, and enter state 47
	'/'            shift, and enter state 48
	'%'            shift, and enter state 49
	"=="           shift, and enter state 50
	"!="           shift, and enter state 51
	'<'            shift, and enter state 52
	"<="           shift, and enter state 53
	'>'            shift, and enter state 54
	">="           shift, and enter state 55
	"&&"           shift, and enter state 56
	"||"           shift, and enter state 57


State 82

	Stmt -> scan_int '(' Exp ')' . ';'                  (rule 17)

	';'            shift, and enter state 89


State 83

	Stmt -> print_int '(' Exp ')' . ';'                 (rule 16)

	';'            shift, and enter state 88


State 84

	Stmt -> while '(' Exp ')' . Stmt                    (rule 14)

	'('            shift, and enter state 19
	'{'            shift, and enter state 20
	'!'            shift, and enter state 21
	if             shift, and enter state 22
	while          shift, and enter state 23
	return         shift, and enter state 24
	int            shift, and enter state 4
	num            shift, and enter state 25
	bool           shift, and enter state 5
	true           shift, and enter state 26
	false          shift, and enter state 27
	print_int      shift, and enter state 28
	scan_int       shift, and enter state 29
	id             shift, and enter state 30

	Stmt           goto state 87
	Simple         goto state 16
	Types          goto state 17
	Exp            goto state 18

State 85

	Stmt -> if '(' Exp ')' . Stmt else Stmt             (rule 12)
	Stmt -> if '(' Exp ')' . Stmt                       (rule 13)

	'('            shift, and enter state 19
	'{'            shift, and enter state 20
	'!'            shift, and enter state 21
	if             shift, and enter state 22
	while          shift, and enter state 23
	return         shift, and enter state 24
	int            shift, and enter state 4
	num            shift, and enter state 25
	bool           shift, and enter state 5
	true           shift, and enter state 26
	false          shift, and enter state 27
	print_int      shift, and enter state 28
	scan_int       shift, and enter state 29
	id             shift, and enter state 30

	Stmt           goto state 86
	Simple         goto state 16
	Types          goto state 17
	Exp            goto state 18

State 86

	Stmt -> if '(' Exp ')' Stmt . else Stmt             (rule 12)
	Stmt -> if '(' Exp ')' Stmt .                       (rule 13)

	'('            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	'!'            reduce using rule 13
	if             reduce using rule 13
	else           shift, and enter state 90
			(reduce using rule 13)

	while          reduce using rule 13
	return         reduce using rule 13
	int            reduce using rule 13
	num            reduce using rule 13
	bool           reduce using rule 13
	true           reduce using rule 13
	false          reduce using rule 13
	print_int      reduce using rule 13
	scan_int       reduce using rule 13
	id             reduce using rule 13
	%eof           reduce using rule 13


State 87

	Stmt -> while '(' Exp ')' Stmt .                    (rule 14)

	'('            reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'!'            reduce using rule 14
	if             reduce using rule 14
	else           reduce using rule 14
	while          reduce using rule 14
	return         reduce using rule 14
	int            reduce using rule 14
	num            reduce using rule 14
	bool           reduce using rule 14
	true           reduce using rule 14
	false          reduce using rule 14
	print_int      reduce using rule 14
	scan_int       reduce using rule 14
	id             reduce using rule 14
	%eof           reduce using rule 14


State 88

	Stmt -> print_int '(' Exp ')' ';' .                 (rule 16)

	'('            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	'!'            reduce using rule 16
	if             reduce using rule 16
	else           reduce using rule 16
	while          reduce using rule 16
	return         reduce using rule 16
	int            reduce using rule 16
	num            reduce using rule 16
	bool           reduce using rule 16
	true           reduce using rule 16
	false          reduce using rule 16
	print_int      reduce using rule 16
	scan_int       reduce using rule 16
	id             reduce using rule 16
	%eof           reduce using rule 16


State 89

	Stmt -> scan_int '(' Exp ')' ';' .                  (rule 17)

	'('            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'!'            reduce using rule 17
	if             reduce using rule 17
	else           reduce using rule 17
	while          reduce using rule 17
	return         reduce using rule 17
	int            reduce using rule 17
	num            reduce using rule 17
	bool           reduce using rule 17
	true           reduce using rule 17
	false          reduce using rule 17
	print_int      reduce using rule 17
	scan_int       reduce using rule 17
	id             reduce using rule 17
	%eof           reduce using rule 17


State 90

	Stmt -> if '(' Exp ')' Stmt else . Stmt             (rule 12)

	'('            shift, and enter state 19
	'{'            shift, and enter state 20
	'!'            shift, and enter state 21
	if             shift, and enter state 22
	while          shift, and enter state 23
	return         shift, and enter state 24
	int            shift, and enter state 4
	num            shift, and enter state 25
	bool           shift, and enter state 5
	true           shift, and enter state 26
	false          shift, and enter state 27
	print_int      shift, and enter state 28
	scan_int       shift, and enter state 29
	id             shift, and enter state 30

	Stmt           goto state 91
	Simple         goto state 16
	Types          goto state 17
	Exp            goto state 18

State 91

	Stmt -> if '(' Exp ')' Stmt else Stmt .             (rule 12)

	'('            reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	'!'            reduce using rule 12
	if             reduce using rule 12
	else           reduce using rule 12
	while          reduce using rule 12
	return         reduce using rule 12
	int            reduce using rule 12
	num            reduce using rule 12
	bool           reduce using rule 12
	true           reduce using rule 12
	false          reduce using rule 12
	print_int      reduce using rule 12
	scan_int       reduce using rule 12
	id             reduce using rule 12
	%eof           reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 41
Number of terminals: 33
Number of non-terminals: 9
Number of states: 92
